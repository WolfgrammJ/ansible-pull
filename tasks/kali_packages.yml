- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "vars/{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version|lower}}.yml"
    - "vars/{{ ansible_distribution|lower }}.yml"
    - "vars/{{ ansible_os_family|lower }}.yml"

###############################################################
# Syncthing preparation for Debian
###############################################################

- name: Add PGP key and repository for syncthing
  become: yes
  raw: |
    curl -s https://syncthing.net/release-key.txt | sudo apt-key add -
    echo "deb https://apt.syncthing.net/ syncthing stable" | sudo tee /etc/apt/sources.list.d/syncthing.list
  when: ansible_facts['os_family'] == 'Debian'


###############################################################
# VSCode preparation for Debian
###############################################################

- name: Add PGP key and repository for syncthing
  become: yes
  raw: |
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
    sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
    rm -f packages.microsoft.gpg


###############################################################
# Update repositories after adding repos (Debian/Suse)
###############################################################

- name: Update repositories cache (Debian)
  apt:
    update_cache: yes
  when: ansible_facts['os_family'] == 'Debian'


###############################################################
# Install packages from repos
###############################################################

- name: Install workstation packages (all Ditros)
  ansible.builtin.package:
    name:
      - remmina
      - syncthing
#      - "{{ java }}"
      - "{{ freerdp }}"
      - terminator 
      - cifs-utils
#      - "{{ smbclient }}"
      - dolphin
      - dolphin-plugins
      - kwrite
#      - snapd
      - apt-transport-https
      - code
    state: latest

- name: Install workstation packages (Debian)
  ansible.builtin.package:
    name:
      - remmina-plugin-exec
      - remmina-plugin-www
#      - remmina-plugin-nx
      - remmina-plugin-kwallet
      - autofs
    state: latest
  when: ansible_facts['os_family'] == 'Debian'


###############################################################
# Install additional software
###############################################################

### TeamViewer (Debian)
- name: Install TeamViewer (Debian)
  become: yes
  apt:
    deb: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
  when: ansible_facts['os_family'] == 'Debian'

- name: Download and move syncthing service
  become_user: "{{ username }}"
  raw: |
    wget -P ~/ https://raw.githubusercontent.com/syncthing/syncthing/main/etc/linux-systemd/system/syncthing%40.service
    sudo chown root: syncthing@.service
    sudo mv ~/syncthing@.service /etc/systemd/system

- name: Setting up syncthing service
  become: yes
  ansible.builtin.systemd:
    daemon_reload: yes
    state: restarted
    enabled: yes
    name: syncthing@"{{ username }}"
  ignore_errors: yes

- name: Start syncthing service explicitly
  become: yes
  ansible.builtin.systemd:
    state: started
    name: syncthing@"{{ username }}"
  ignore_errors: yes

